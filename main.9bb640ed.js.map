{"version":3,"sources":["scripts/main.js"],"names":["growthTable","document","querySelector","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","minCells","maxCells","rowNumber","rows","length","columnNumber","cells","addEventListener","newRow","cloneNode","appendChild","disabled","e","removeChild","forEach","row","newCell","createElement","deleteCell"],"mappings":";AAAA,aAmEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjEA,IAAMA,EAAcC,SAASC,cAAc,UAErCC,EAAkBF,SAASC,cAAc,eACzCE,EAAkBH,SAASC,cAAc,eACzCG,EAAqBJ,SAASC,cAAc,kBAC5CI,EAAqBL,SAASC,cAAc,kBAC5CK,EAAW,EACXC,EAAW,GAEbC,EAAYT,EAAYU,KAAKC,OAC7BC,EAAeZ,EAAYU,KAAK,GAAGG,MAAMF,OAE7CR,EAAgBW,iBAAiB,QAAS,WACpCL,GAAAA,IAAcD,EAAU,CACpBO,IAAAA,EAASf,EAAYU,KAAK,GAAGM,WAAU,GAE7Cf,SAASC,cAAc,SAASe,YAAYF,GAC5CN,IAGEA,IAAcD,IAChBL,EAAgBe,UAAW,GAGzBT,EAAYF,IACdH,EAAgBc,UAAW,KAI/Bd,EAAgBU,iBAAiB,QAAS,SAACK,GACrCV,IAAcF,IAChBN,SACGC,cAAc,SACdkB,YAAYpB,EAAYU,KAAKD,EAAY,IAC5CA,KAGEA,IAAcF,IAChBH,EAAgBc,UAAW,GAGzBT,EAAYD,IACdL,EAAgBe,UAAW,KAI/Bb,EAAmBS,iBAAiB,QAAS,SAACK,GACxCP,IAAiBJ,IACfR,EAAAA,EAAYU,MAAMW,QAAQ,SAACC,GACvBC,IAAAA,EAAUtB,SAASuB,cAAc,MAEvCF,EAAIL,YAAYM,KAElBX,KAGEA,IAAiBJ,IACnBH,EAAmBa,UAAW,GAG5BN,EAAeL,IACjBD,EAAmBY,UAAW,KAIlCZ,EAAmBQ,iBAAiB,QAAS,SAACK,GACxCP,IAAiBL,IACfP,EAAAA,EAAYU,MAAMW,QAAQ,SAACC,GAC7BA,EAAIG,WAAWb,EAAe,KAEhCA,KAGEA,IAAiBL,IACnBD,EAAmBY,UAAW,GAG5BN,EAAeJ,IACjBH,EAAmBa,UAAW","file":"main.9bb640ed.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst growthTable = document.querySelector('.field');\n\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\nconst minCells = 2;\nconst maxCells = 10;\n\nlet rowNumber = growthTable.rows.length;\nlet columnNumber = growthTable.rows[0].cells.length;\n\nappendRowButton.addEventListener('click', () => {\n  if (rowNumber !== maxCells) {\n    const newRow = growthTable.rows[0].cloneNode(true);\n\n    document.querySelector('tbody').appendChild(newRow);\n    rowNumber++;\n  }\n\n  if (rowNumber === maxCells) {\n    appendRowButton.disabled = true;\n  }\n\n  if (rowNumber > minCells) {\n    removeRowButton.disabled = false;\n  }\n});\n\nremoveRowButton.addEventListener('click', (e) => {\n  if (rowNumber !== minCells) {\n    document\n      .querySelector('tbody')\n      .removeChild(growthTable.rows[rowNumber - 1]);\n    rowNumber--;\n  }\n\n  if (rowNumber === minCells) {\n    removeRowButton.disabled = true;\n  }\n\n  if (rowNumber < maxCells) {\n    appendRowButton.disabled = false;\n  }\n});\n\nappendColumnButton.addEventListener('click', (e) => {\n  if (columnNumber !== maxCells) {\n    [...growthTable.rows].forEach((row) => {\n      const newCell = document.createElement('td');\n\n      row.appendChild(newCell);\n    });\n    columnNumber++;\n  }\n\n  if (columnNumber === maxCells) {\n    appendColumnButton.disabled = true;\n  }\n\n  if (columnNumber > minCells) {\n    removeColumnButton.disabled = false;\n  }\n});\n\nremoveColumnButton.addEventListener('click', (e) => {\n  if (columnNumber !== minCells) {\n    [...growthTable.rows].forEach((row) => {\n      row.deleteCell(columnNumber - 1);\n    });\n    columnNumber--;\n  }\n\n  if (columnNumber === minCells) {\n    removeColumnButton.disabled = true;\n  }\n\n  if (columnNumber < maxCells) {\n    appendColumnButton.disabled = false;\n  }\n});\n"]}